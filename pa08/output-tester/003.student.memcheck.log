==21495== Memcheck, a memory error detector
==21495== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==21495== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==21495== Command: /tmp/.KzWsBM/a.out 1 123456789ABCDEF- UUUUDRLS
==21495== Parent PID: 21494
==21495== 
--21495-- 
--21495-- Valgrind options:
--21495--    --tool=memcheck
--21495--    --leak-check=full
--21495--    --verbose
--21495--    --log-file=/tmp/.KzWsBM/tmpf
--21495-- Contents of /proc/version:
--21495--   Linux version 4.4.0-31-generic (buildd@lgw01-16) (gcc version 5.3.1 20160413 (Ubuntu 5.3.1-14ubuntu2.1) ) #50-Ubuntu SMP Wed Jul 13 00:07:12 UTC 2016
--21495-- 
--21495-- Arch and hwcaps: AMD64, LittleEndian, amd64-cx16-rdtscp-sse3-avx
--21495-- Page sizes: currently 4096, max supported 4096
--21495-- Valgrind library directory: /usr/lib/valgrind
--21495-- Reading syms from /tmp/.KzWsBM/a.out
--21495-- Reading syms from /lib/x86_64-linux-gnu/ld-2.23.so
--21495--   Considering /lib/x86_64-linux-gnu/ld-2.23.so ..
--21495--   .. CRC mismatch (computed d3da0723 wanted a1c29704)
--21495--   Considering /usr/lib/debug/lib/x86_64-linux-gnu/ld-2.23.so ..
--21495--   .. CRC is valid
--21495-- Reading syms from /usr/lib/valgrind/memcheck-amd64-linux
--21495--   Considering /usr/lib/valgrind/memcheck-amd64-linux ..
--21495--   .. CRC mismatch (computed 5529a2c7 wanted 5bd23904)
--21495--    object doesn't have a symbol table
--21495--    object doesn't have a dynamic symbol table
--21495-- Scheduler: using generic scheduler lock implementation.
--21495-- Reading suppressions file: /usr/lib/valgrind/default.supp
==21495== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-21495-by-asheem-on-???
==21495== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-21495-by-asheem-on-???
==21495== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-21495-by-asheem-on-???
==21495== 
==21495== TO CONTROL THIS PROCESS USING vgdb (which you probably
==21495== don't want to do, unless you know exactly what you're doing,
==21495== or are doing some strange experiment):
==21495==   /usr/lib/valgrind/../../bin/vgdb --pid=21495 ...command...
==21495== 
==21495== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==21495==   /path/to/gdb /tmp/.KzWsBM/a.out
==21495== and then give GDB the following command
==21495==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=21495
==21495== --pid is optional if only one valgrind process is running
==21495== 
--21495-- REDIR: 0x401cdc0 (ld-linux-x86-64.so.2:strlen) redirected to 0x3809e181 (???)
--21495-- Reading syms from /usr/lib/valgrind/vgpreload_core-amd64-linux.so
--21495--   Considering /usr/lib/valgrind/vgpreload_core-amd64-linux.so ..
--21495--   .. CRC mismatch (computed a30c8eaa wanted 7ae2fed4)
--21495--    object doesn't have a symbol table
--21495-- Reading syms from /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so
--21495--   Considering /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so ..
--21495--   .. CRC mismatch (computed 402c2ab5 wanted 745f25ae)
--21495--    object doesn't have a symbol table
==21495== WARNING: new redirection conflicts with existing -- ignoring it
--21495--     old: 0x0401cdc0 (strlen              ) R-> (0000.0) 0x3809e181 ???
--21495--     new: 0x0401cdc0 (strlen              ) R-> (2007.0) 0x04c31020 strlen
--21495-- REDIR: 0x401b710 (ld-linux-x86-64.so.2:index) redirected to 0x4c30bc0 (index)
--21495-- REDIR: 0x401b930 (ld-linux-x86-64.so.2:strcmp) redirected to 0x4c320d0 (strcmp)
--21495-- REDIR: 0x401db20 (ld-linux-x86-64.so.2:mempcpy) redirected to 0x4c35270 (mempcpy)
--21495-- Reading syms from /lib/x86_64-linux-gnu/libc-2.23.so
--21495--   Considering /lib/x86_64-linux-gnu/libc-2.23.so ..
--21495--   .. CRC mismatch (computed 2adb2e50 wanted 9b73f606)
--21495--   Considering /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.23.so ..
--21495--   .. CRC is valid
--21495-- REDIR: 0x4ec8fd0 (libc.so.6:strcasecmp) redirected to 0x4a286f0 (_vgnU_ifunc_wrapper)
--21495-- REDIR: 0x4ec4850 (libc.so.6:strcspn) redirected to 0x4a286f0 (_vgnU_ifunc_wrapper)
--21495-- REDIR: 0x4ecb2c0 (libc.so.6:strncasecmp) redirected to 0x4a286f0 (_vgnU_ifunc_wrapper)
--21495-- REDIR: 0x4ec6cc0 (libc.so.6:strpbrk) redirected to 0x4a286f0 (_vgnU_ifunc_wrapper)
--21495-- REDIR: 0x4ec7050 (libc.so.6:strspn) redirected to 0x4a286f0 (_vgnU_ifunc_wrapper)
--21495-- REDIR: 0x4ec871b (libc.so.6:memcpy@GLIBC_2.2.5) redirected to 0x4a286f0 (_vgnU_ifunc_wrapper)
--21495-- REDIR: 0x4ec69d0 (libc.so.6:rindex) redirected to 0x4c308a0 (rindex)
--21495-- REDIR: 0x4ec4cf0 (libc.so.6:strlen) redirected to 0x4c30f60 (strlen)
--21495-- REDIR: 0x4ec4730 (libc.so.6:strcpy) redirected to 0x4a286f0 (_vgnU_ifunc_wrapper)
--21495-- REDIR: 0x4edefa0 (libc.so.6:__strcpy_sse2_unaligned) redirected to 0x4c31040 (strcpy)
--21495-- REDIR: 0x4ec8980 (libc.so.6:__GI_mempcpy) redirected to 0x4c34fa0 (__GI_mempcpy)
--21495-- REDIR: 0x4ecda40 (libc.so.6:__GI_memcpy) redirected to 0x4c32b00 (__GI_memcpy)
--21495-- REDIR: 0x4ebda70 (libc.so.6:free) redirected to 0x4c2ed80 (free)
--21495-- REDIR: 0x4ec32a0 (libc.so.6:strcmp) redirected to 0x4a286f0 (_vgnU_ifunc_wrapper)
--21495-- REDIR: 0x4ed8b40 (libc.so.6:__strcmp_sse2_unaligned) redirected to 0x4c31f90 (strcmp)
--21495-- REDIR: 0x4ecfd30 (libc.so.6:strchrnul) redirected to 0x4c34da0 (strchrnul)
==21495== 
==21495== HEAP SUMMARY:
==21495==     in use at exit: 0 bytes in 0 blocks
==21495==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==21495== 
==21495== All heap blocks were freed -- no leaks are possible
==21495== 
==21495== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==21495== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
